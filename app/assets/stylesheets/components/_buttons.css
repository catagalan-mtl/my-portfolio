.btn {
  font-size: 1.35rem;
  font-weight: 700;
  text-decoration: none;
  text-align: center;
  padding: 15px 50px;
  border-radius: var(--gutter-x-large);
  transition: 0.3s all ease-in-out;
  cursor: pointer;
  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;
}

@media (max-width: 700px) {
  .btn {
    padding: 16px 48px;
  }
}

@media (max-width: 485px) {
  .btn {
    font-size: 1.2rem;
    padding: 14px 38px;
  }
}

.btn-cta {
  color: var(--bg-color-primary);
  background-color: var(--important);
}

body.dark .btn-cta:hover,
body.dark .btn-cta:focus {
  box-shadow: #ffffff40 0 0 0 var(--gutter-nano);
}

body.light .btn-cta:hover,
body.light .btn-cta:focus {
  box-shadow: #07070733 0 0 0 var(--gutter-nano);
}

.btn-secondary {
  border: 1px solid var(--border-dark);
  color: var(--important);
}

.btn-secondary:hover,
.btn-secondary:focus {
  border-color: var(--important);
}

.link {
  display: inline-block;
  font-weight: 600;
  font-size: var(--text-small);
  padding: var(--gutter-nano) 0;
  text-decoration: none;
  color: var(--important);
  position: relative;
}

.link::after,
.link::before {
  content: "";
  width: 100%;
  height: 1px;
  margin-block-start: var(--gutter-nano);
  position: absolute;
  bottom: -1px;
  left: 0;
  transition: 300ms;
}

body.dark .link::before {
  background-color: #d3d3d357;
}

body.dark .link::after {
  background-color: white;
}

body.light .link::before {
  background-color: lightgray;
}

body.light .link::after {
  background-color: black;
}

.link::after {
  background-color: white;
  transform-origin: left;
  transform: scaleX(0);
}

.link:hover::after,
.link:focus::after {
  transform: scaleX(1);
}


/* --------------------------------- */
/* ----- Menu Button -----*/
/* --------------------------------- */

.menu-btn-container {
  position: fixed;
  padding: 0px 20px;
  display: flex;
  align-items: start;
  justify-content: space-between;
  width: 100%;
  top: var(--gutter-x-small);
  /* left: 0; */
  z-index: 4;
}

.menu-btn {
  display: block;
  /* margin-inline-start: auto; */

  border: 1px solid var(--border-dark);
  inline-size: 110px;
  padding-block: var(--gutter-nano);
  border-radius: var(--gutter-x-large);
  text-decoration: none;
  background-color: var(--bg-color-secondary);
  color: var(--important);
  cursor: pointer;
  box-shadow: rgba(0, 0, 0, 0.1) 0px 2px 12px;
  transition: 0.3s all ease-in-out;
}
.menu-btn-nav {
  display: block;
  /* margin-inline-start: auto; */

  border: 1px solid var(--border-dark);
  inline-size: 110px;
  padding-block: var(--gutter-nano);
  border-radius: var(--gutter-x-large);
  text-decoration: none;
  background-color: var(--border-dark);
  color: white;
  cursor: pointer;
  transition: 0.3s all ease-in-out;
}

.menu-btn:hover,
.btn-secondary:focus {
  border-color: var(--important);
}

.menu-btn-nav:hover,
.btn-secondary:focus {
  border-color: white;
}

.menu-btn,
.nav-items a {
  /* font-stretch: 200%; */

  font-size: var(--text-medium);
  font-weight: 700;
}

.theme-switch {
  /* Track */

  --track-size: calc(var(--thumb-size) * 2);
  --track-padding: 0.225rem;
  --track-inactive: hsl(80 0% 80%);
  --track-active: hsl(0, 0%, 45%);

  --track-color-inactive: var(--track-inactive);
  --track-color-active: var(--track-active);

  /* Thumb */

  --thumb-position: 0%;
  --thumb-size: 1.2rem;
  --thumb: hsl(0 0% 100%);
  --thumb-highlight: hsla(0, 0%, 0%, 0.056);

  --thumb-color: var(--thumb);
  --thumb-color-highlight: var(--thumb-highlight);
}

.theme-switch {
  display: flex;
  align-items: center;
  gap: 2ch;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
}

.theme-switch > span,
.theme-switch > input {
  cursor: pointer;
}

.theme-switch span {
  font-size: 1rem;
  color: var(--sub);
}

.theme-switch > input {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  box-sizing: content-box;
  inline-size: var(--track-size);
  block-size: var(--thumb-size);
  padding: var(--track-padding);
  background-color: var(--track-color-inactive);
  border-radius: var(--track-size);
}

.theme-switch > input::after {
  display: block;
  content: "";
  inline-size: var(--thumb-size);
  block-size: var(--thumb-size);
  background-color: var(--thumb-color);
  border-radius: 50%;
  transform: translateX(var(--thumb-position));
  transition: 500ms all cubic-bezier(0.45, 0.05, 0.22, 1.3);
}

input:checked {
  --thumb-position: 100%;
  background-color: var(--track-active);
}
